<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <jpa:repositories base-package="nl.christine.schwartze.server"/>

    <context:property-placeholder location="classpath:/META-INF/database.properties"/>

    <context:component-scan base-package="nl.christine.schwartze.server"/>

    <bean class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close" id="dataSource">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <bean class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close" id="importDataSource">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${importDatabase.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="defaultPU"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="nl.christine.schwartze.server.model"/>
        <property name="jpaVendorAdapter" ref="hibernateVendorAdapter"/>
        <property name="jpaProperties" ref="props"/>
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
    </bean>

    <bean id="importEntityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="importPU"/>
        <property name="dataSource" ref="importDataSource"/>
        <property name="packagesToScan" value="nl.christine.schwartze.server.modelimport"/>
        <property name="jpaVendorAdapter" ref="hibernateVendorAdapter"/>
        <property name="jpaProperties" ref="importprops"/>
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="importTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="importEntityManagerFactory" />
    </bean>

    <bean id="hibernateVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <util:properties id="props">
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
        <prop key="hibernate.hbm2ddl.auto">${database.createorvalidate}</prop>
        <prop key="hibernate.ddl-auto">${database.createorvalidate}</prop>
        <prop key="spring.jpa.show-sql">true</prop>
        <prop key="spring.jpa.generate.ddl">true</prop>
        <prop key="spring.jpa.hibernate.ddl-auto">${database.createorvalidate}</prop>
        <prop key="spring.datasource.initialization-mode">never</prop>
        <prop key="spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation">true</prop>
    </util:properties>

    <util:properties id="importprops">
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.id.new_generator_mappings">false</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
        <prop key="hibernate.hbm2ddl.auto">validate</prop>
        <prop key="hibernate.ddl-auto">validate</prop>
        <prop key="spring.jpa.show-sql">true</prop>
        <prop key="spring.jpa.generate.ddl">true</prop>
        <prop key="spring.jpa.hibernate.ddl-auto">validate</prop>
        <prop key="spring.datasource.initialization-mode">never</prop>
        <prop key="spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation">true</prop>
    </util:properties>

    <bean id="importLetterDao" class="nl.christine.schwartze.server.daoimport.impl.ImportLetterDaoImpl" scope="singleton" />

    <bean id="letterDao" class="nl.christine.schwartze.server.dao.impl.LetterDaoImpl" scope="singleton" />

    <bean id="locationDao" class="nl.christine.schwartze.server.dao.impl.LocationDaoImpl" scope="singleton" />

    <bean id="personDao" class="nl.christine.schwartze.server.dao.impl.PersonDaoImpl" scope="singleton" />

    <bean id="letterService" class="nl.christine.schwartze.server.service.impl.LetterServiceImpl" scope="singleton" />

    <bean id="personService" class="nl.christine.schwartze.server.service.impl.PersonServiceImpl" scope="singleton" />

    <bean id="locationService" class="nl.christine.schwartze.server.service.impl.LocationServiceImpl" scope="singleton" />

    <bean id="imageService" class="nl.christine.schwartze.server.image.impl.ImageServiceImpl" scope="singleton" />

</beans>